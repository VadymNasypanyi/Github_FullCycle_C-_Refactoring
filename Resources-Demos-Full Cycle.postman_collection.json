{
	"info": {
		"_postman_id": "972bc4ea-cd15-4eae-827b-96c12681ad8e",
		"name": "Resources>Demos>Full Cycle",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Getting Auth Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4ee4484a-aa8d-49e0-93ba-9fddd33fb34c",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", jsonData.authToken)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "text/plain"
					},
					{
						"key": "tenant",
						"value": "{{tenant}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"UserName\":\"{{UserName}}\",\"Password\":\"{{Password}}\"}"
				},
				"url": {
					"raw": "https://auth-{{host}}/users/getauthenticationtoken",
					"protocol": "https",
					"host": [
						"auth-{{host}}"
					],
					"path": [
						"users",
						"getauthenticationtoken"
					]
				}
			},
			"response": []
		},
		{
			"name": "Demo's Creation",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a0e3f30f-352e-4e45-a0cb-05e6d7dc16fa",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "95641973-8273-4567-bcf9-cfe0fb058071",
						"exec": [
							"pm.environment.set(\"ID\", pm.response.json())",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Date is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"X-Powered-By is present\", function () {",
							"    pm.response.to.have.header(\"X-Powered-By\");",
							"});",
							"",
							"pm.test(\"Strict-Transport-Security is present\", function () {",
							"    pm.response.to.have.header(\"Strict-Transport-Security\");",
							"});",
							"",
							"pm.test(\"Access-Control-Allow-Origin is present\", function () {",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\");",
							"});",
							"",
							"pm.test(\"Server is present\", function () {",
							"    pm.response.to.have.header(\"Server\");",
							"});",
							"",
							"pm.test(\"Transfer-Encoding is present\", function () {",
							"    pm.response.to.have.header(\"Transfer-Encoding\");",
							"});",
							"",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Accept",
						"value": "application/json, text/javascript, */*; q=0.01"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json; charset=UTF-8"
					},
					{
						"key": "Origin",
						"value": "{{Origin}}"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-site"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "{{Referer}}"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "uk,en-US;q=0.9,en;q=0.8"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"ResourceSetID\":{{ResourceSetId}},\"isNewEntity\":true,\"BuyCode\":\"{{Buy_Code}}\",\"Code\":\"{{Code}}\",\"CostCode\":\"{{Cost_Code}}\",\"Name\":\"{{Name}}\",\"EthnicityID\":{{EthnicityID}},\"ImpactFamily\":\"{{Impact_Family}}\", \"Inactive\":true}\n\n\n\n\n"
				},
				"url": {
					"raw": "https://{{host}}/demo/add",
					"protocol": "https",
					"host": [
						"{{host}}"
					],
					"path": [
						"demo",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getting demo's parameters (original values)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "59d4bb30-bdfa-4f05-b24a-f06508a2975c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ade84b60-8537-4aee-9643-4795f83d47f3",
						"exec": [
							"pm.test(\"Correct response format JSON\", function () {",
							"    pm.response.to.have.jsonBody();",
							"});",
							"",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"",
							"",
							"pm.test(\"Header 'Content-Type' is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Header 'Date' is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"Header 'X-Powered-By' is present\", function () {",
							"    pm.response.to.have.header(\"X-Powered-By\");",
							"});",
							"",
							"pm.test(\"Header 'Strict-Transport-Security' is present\", function () {",
							"    pm.response.to.have.header(\"Strict-Transport-Security\");",
							"});",
							"",
							"pm.test(\"Header 'Access-Control-Allow-Origin' is present\", function () {",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\");",
							"});",
							"",
							"pm.test(\"Header 'Server' is present\", function () {",
							"    pm.response.to.have.header(\"Server\");",
							"});",
							"",
							"pm.test(\"Header 'Transfer-Encoding' is present\", function () {",
							"    pm.response.to.have.header(\"Transfer-Encoding\");",
							"});",
							"",
							"",
							"",
							"var json1 = JSON.parse(responseBody);",
							"tests[\"Field 'ID' is present\"] = responseBody.has('ID') ;",
							"tests[\"Field 'Name' is present\"] = responseBody.has('Name') ;",
							"tests[\"Field 'ReachID' is present\"] = responseBody.has('ReachID') ;",
							"tests[\"Field 'Population' is present\"] = responseBody.has('Population') ;",
							"tests[\"Field 'Code' is present\"] = responseBody.has('Code') ;",
							"tests[\"Field 'BuyCode' is present\"] = responseBody.has('BuyCode') ;",
							"tests[\"Field 'SortOrder' is present\"] = responseBody.has('SortOrder') ;",
							"tests[\"Field 'ResourceSetID' is present\"] = responseBody.has('ResourceSetID') ;",
							"tests[\"Field 'ImpactFamily' is present\"] = responseBody.has('ImpactFamily') ;",
							"tests[\"Field 'CostCode' is present\"] = responseBody.has('CostCode') ;",
							"tests[\"Field 'EthnicityID' is present\"] = responseBody.has('EthnicityID') ;",
							"tests[\"Field 'Pop' is present\"] = responseBody.has('Pop') ;",
							"tests[\"Field 'ElementType' is present\"] = responseBody.has('ElementType') ;",
							"tests[\"Field 'DatatechCode' is present\"] = responseBody.has('DatatechCode') ;",
							"tests[\"Field 'Ethnicity' is present\"] = responseBody.has('Ethnicity') ;",
							"",
							"",
							"",
							"/*var data = JSON.parse(responseBody);",
							"",
							"var schema = {",
							"    ",
							"    \"type\": \"object\",",
							"    ",
							"    \"properties\": {",
							"        \"ID\": {\"type\":\"number\"},",
							"        \"Name\": {\"type\":\"string\"},",
							"        \"ReachID\": {\"type\":\"number\"},",
							"        \"Population\": {\"type\":\"number\"},",
							"        \"Code\": {\"type\":\"string\"},",
							"        \"BuyCode\": {\"type\":\"string\"},",
							"        \"SortOrder\": {\"type\":\"number\"},",
							"        \"Inactive\": {\"type\":\"boolean\"},",
							"        \"ResourceSetID\": {\"type\":\"number\"},",
							"        \"ImpactFamily\": {\"type\":\"string\"},",
							"        \"CostCode\": {\"type\":\"string\"},",
							"        \"EthnicityID\": {\"type\":\"number\"},",
							"        \"Pop\": {\"type\":\"number\"},",
							"        \"Tag\": {\"type\":\"null\"},",
							"        \"ElementType\": {\"type\":\"number\"},",
							"        \"DatatechCode\": {\"type\":\"string\"},",
							"        \"Ethnicity\": {\"type\":\"string\"}",
							"        ",
							"    }",
							"};",
							"",
							"pm.test('Body is correct', function (){",
							"    pm.expect(tv4.validate(data, schema)).to.be.true;",
							"});",
							"*/",
							"",
							"",
							"pm.test(\"Value of field 'Name' is correct (original value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Name'));",
							"});",
							"pm.test(\"Value of field 'ResourceSetId' is correct (original value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('ResourceSetId'));",
							"});",
							"pm.test(\"Value of field 'Buy_Code' is correct (original value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Buy_Code'));",
							"});",
							"pm.test(\"Value of field 'Code' is correct (original value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Code'));",
							"});",
							"pm.test(\"Value of field 'Cost_Code' is correct (original value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Cost_Code'));",
							"});",
							"pm.test(\"Value of field 'Impact_Family' is correct (original value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Impact_Family'));",
							"});",
							"pm.test(\"Value of field 'EthnicityID' is correct (original value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('EthnicityID'));",
							"});",
							"pm.test(\"Value of field 'Inactive' is correct (true)\", function () {",
							"    pm.expect(pm.response.text()).to.include(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Accept",
						"value": "application/json, text/javascript, */*; q=0.01"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json; charset=utf-8"
					},
					{
						"key": "Origin",
						"value": "{{Origin}}"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-site"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "{{Referer}}"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "uk,en-US;q=0.9,en;q=0.8"
					}
				],
				"url": {
					"raw": "https://{{host}}/demo/ResourceSetId/{{ResourceSetId}}",
					"protocol": "https",
					"host": [
						"{{host}}"
					],
					"path": [
						"demo",
						"ResourceSetId",
						"{{ResourceSetId}}"
					]
				},
				"description": "LIST OF DEMOS + THEIR PARAMETERS"
			},
			"response": []
		},
		{
			"name": "All fields updating",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "09ae6fcd-ef5e-4d41-9b74-7b074442784f",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"",
							"",
							"pm.test(\"Date is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"X-Powered-By is present\", function () {",
							"    pm.response.to.have.header(\"X-Powered-By\");",
							"});",
							"",
							"pm.test(\"Strict-Transport-Security is present\", function () {",
							"    pm.response.to.have.header(\"Strict-Transport-Security\");",
							"});",
							"",
							"pm.test(\"Access-Control-Allow-Origin is present\", function () {",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\");",
							"});",
							"",
							"pm.test(\"Server is present\", function () {",
							"    pm.response.to.have.header(\"Server\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Accept",
						"value": "application/json, text/javascript, */*; q=0.01"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json; charset=UTF-8"
					},
					{
						"key": "Origin",
						"value": "{{Origin}}"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-site"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "{{Referer}}"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "uk,en-US;q=0.9,en;q=0.8"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"ID\":{{ID}},\"Name\":\"{{Name_updated}}\",\"ReachID\":null,\"Population\":null,\"Code\":\"{{Code_updated}}\",\"BuyCode\":\"{{Buy_Code_updated}}\",\"SortOrder\":0,\"Inactive\":false,\"ResourceSetID\":{{ResourceSetId}},\"ImpactFamily\":\"{{Impact_Family_updated}}\",\"CostCode\":\"{{Cost_Code_updated}}\",\"EthnicityID\":{{EthnicityID_updated}},\"Pop\":null,\"Tag\":null,\"ElementType\":0,\"DatatechCode\":null,\"Ethnicity\":null,\"duplicate\":true}"
				},
				"url": {
					"raw": "https://{{host}}/demo/update",
					"protocol": "https",
					"host": [
						"{{host}}"
					],
					"path": [
						"demo",
						"update"
					]
				},
				"description": "Updating fields "
			},
			"response": []
		},
		{
			"name": "Getting demo's parameters (updated values)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fee96055-c7cc-4a73-b0b7-5b7cd649b62b",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"",
							"",
							"pm.test(\"Header 'Content-Type' is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Header 'Date' is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"Header 'X-Powered-By' is present\", function () {",
							"    pm.response.to.have.header(\"X-Powered-By\");",
							"});",
							"",
							"pm.test(\"Header 'Strict-Transport-Security' is present\", function () {",
							"    pm.response.to.have.header(\"Strict-Transport-Security\");",
							"});",
							"",
							"pm.test(\"Header 'Access-Control-Allow-Origin' is present\", function () {",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\");",
							"});",
							"",
							"pm.test(\"Header 'Server' is present\", function () {",
							"    pm.response.to.have.header(\"Server\");",
							"});",
							"",
							"pm.test(\"Header 'Transfer-Encoding' is present\", function () {",
							"    pm.response.to.have.header(\"Transfer-Encoding\");",
							"});",
							"",
							"",
							"",
							"var json1 = JSON.parse(responseBody);",
							"tests[\"Field 'ID' is present\"] = responseBody.has('ID') ;",
							"tests[\"Field 'Name' is present\"] = responseBody.has('Name') ;",
							"tests[\"Field 'ReachID' is present\"] = responseBody.has('ReachID') ;",
							"tests[\"Field 'Population' is present\"] = responseBody.has('Population') ;",
							"tests[\"Field 'Code' is present\"] = responseBody.has('Code') ;",
							"tests[\"Field 'BuyCode' is present\"] = responseBody.has('BuyCode') ;",
							"tests[\"Field 'SortOrder' is present\"] = responseBody.has('SortOrder') ;",
							"tests[\"Field 'ResourceSetID' is present\"] = responseBody.has('ResourceSetID') ;",
							"tests[\"Field 'ImpactFamily' is present\"] = responseBody.has('ImpactFamily') ;",
							"tests[\"Field 'CostCode' is present\"] = responseBody.has('CostCode') ;",
							"tests[\"Field 'EthnicityID' is present\"] = responseBody.has('EthnicityID') ;",
							"tests[\"Field 'Pop' is present\"] = responseBody.has('Pop') ;",
							"tests[\"Field 'ElementType' is present\"] = responseBody.has('ElementType') ;",
							"tests[\"Field 'DatatechCode' is present\"] = responseBody.has('DatatechCode') ;",
							"tests[\"Field 'Ethnicity' is present\"] = responseBody.has('Ethnicity') ;",
							"",
							"/*",
							"var data = JSON.parse(responseBody);",
							"",
							"var schema = {",
							"    ",
							"    \"type\": \"object\",",
							"    ",
							"    \"properties\": {",
							"        \"ID\": {\"type\":\"number\"},",
							"        \"Name\": {\"type\":\"string\"},",
							"        \"ReachID\": {\"type\":\"number\"},",
							"        \"Population\": {\"type\":\"number\"},",
							"        \"Code\": {\"type\":\"string\"},",
							"        \"BuyCode\": {\"type\":\"string\"},",
							"        \"SortOrder\": {\"type\":\"number\"},",
							"        \"Inactive\": {\"type\":\"boolean\"},",
							"        \"ResourceSetID\": {\"type\":\"number\"},",
							"        \"ImpactFamily\": {\"type\":\"string\"},",
							"        \"CostCode\": {\"type\":\"string\"},",
							"        \"EthnicityID\": {\"type\":\"number\"},",
							"        \"Pop\": {\"type\":\"number\"},",
							"        \"Tag\": {\"type\":\"null\"},",
							"        \"ElementType\": {\"type\":\"number\"},",
							"        \"DatatechCode\": {\"type\":\"string\"},",
							"        \"Ethnicity\": {\"type\":\"string\"}",
							"        ",
							"    }",
							"};",
							"",
							"pm.test('Body is correct', function (){",
							"    pm.expect(tv4.validate(data, schema)).to.be.true;",
							"});",
							"*/",
							"",
							"pm.test(\"Value of field 'Name' is correct (updated value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Name_updated'));",
							"});",
							"pm.test(\"Value of field 'ResourceSetId' is correct (original value remains unchanged)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('ResourceSetId'));",
							"});",
							"pm.test(\"Value of field 'Buy_Code' is correct (updated value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Buy_Code_updated'));",
							"});",
							"pm.test(\"Value of field 'Code' is correct (updated value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Code_updated'));",
							"});",
							"pm.test(\"Value of field 'Cost_Code' is correct (updated value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Cost_Code_updated'));",
							"});",
							"pm.test(\"Value of field 'Impact_Family' is correct (updated value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('Impact_Family_updated'));",
							"});",
							"pm.test(\"Value of field 'EthnicityID' is correct (updated value)\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.variables.get('EthnicityID_updated'));",
							"});",
							"",
							"pm.test(\"Value of field 'Inactive' is correct (false)\", function () {",
							"    pm.expect(pm.response.text()).to.include(false);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Accept",
						"value": "application/json, text/javascript, */*; q=0.01"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json; charset=utf-8"
					},
					{
						"key": "Origin",
						"value": "{{Origin}}"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-site"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "{{Referer}}"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "uk,en-US;q=0.9,en;q=0.8"
					}
				],
				"url": {
					"raw": "https://{{host}}/demo/ResourceSetId/{{ResourceSetId}}",
					"protocol": "https",
					"host": [
						"{{host}}"
					],
					"path": [
						"demo",
						"ResourceSetId",
						"{{ResourceSetId}}"
					]
				},
				"description": "List of Demos + paramaters"
			},
			"response": []
		},
		{
			"name": "Demo's deleting",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7c05560-6f46-42e3-89d8-bfc55ab8458f",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"true\");",
							"    ",
							"    ",
							"});pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Date is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"X-Powered-By is present\", function () {",
							"    pm.response.to.have.header(\"X-Powered-By\");",
							"});",
							"",
							"pm.test(\"Strict-Transport-Security is present\", function () {",
							"    pm.response.to.have.header(\"Strict-Transport-Security\");",
							"});",
							"",
							"pm.test(\"Access-Control-Allow-Origin is present\", function () {",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\");",
							"});",
							"",
							"pm.test(\"Server is present\", function () {",
							"    pm.response.to.have.header(\"Server\");",
							"});",
							"",
							"pm.test(\"Transfer-Encoding is present\", function () {",
							"    pm.response.to.have.header(\"Transfer-Encoding\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Accept",
						"value": "application/json, text/javascript, */*; q=0.01"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json; charset=UTF-8"
					},
					{
						"key": "Origin",
						"value": "{{Origin}}"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-site"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "{{Referer}}"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "uk,en-US;q=0.9,en;q=0.8"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{host}}/demo/destroy/{{ID}}",
					"protocol": "https",
					"host": [
						"{{host}}"
					],
					"path": [
						"demo",
						"destroy",
						"{{ID}}"
					]
				},
				"description": "Demo Deleting"
			},
			"response": []
		},
		{
			"name": "Getting demo's parameters (missing values)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a398b6cf-387a-49c1-a4bd-7faa652dbefb",
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"",
							"",
							"pm.test(\"Header 'Content-Type' is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Header 'Date' is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"Header 'X-Powered-By' is present\", function () {",
							"    pm.response.to.have.header(\"X-Powered-By\");",
							"});",
							"",
							"pm.test(\"Header 'Strict-Transport-Security' is present\", function () {",
							"    pm.response.to.have.header(\"Strict-Transport-Security\");",
							"});",
							"",
							"pm.test(\"Header 'Access-Control-Allow-Origin' is present\", function () {",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\");",
							"});",
							"",
							"pm.test(\"Header 'Server' is present\", function () {",
							"    pm.response.to.have.header(\"Server\");",
							"});",
							"",
							"pm.test(\"Header 'Transfer-Encoding' is present\", function () {",
							"    pm.response.to.have.header(\"Transfer-Encoding\");",
							"});",
							"",
							"",
							"",
							"/*var json1 = JSON.parse(responseBody);",
							"tests[\"Field 'ID' is present\"] = responseBody.has('ID') ;",
							"tests[\"Field 'Name' is present\"] = responseBody.has('Name') ;",
							"tests[\"Field 'ReachID' is present\"] = responseBody.has('ReachID') ;",
							"tests[\"Field 'Population' is present\"] = responseBody.has('Population') ;",
							"tests[\"Field 'Code' is present\"] = responseBody.has('Code') ;",
							"tests[\"Field 'BuyCode' is present\"] = responseBody.has('BuyCode') ;",
							"tests[\"Field 'SortOrder' is present\"] = responseBody.has('SortOrder') ;",
							"tests[\"Field 'ResourceSetID' is present\"] = responseBody.has('ResourceSetID') ;",
							"tests[\"Field 'ImpactFamily' is present\"] = responseBody.has('ImpactFamily') ;",
							"tests[\"Field 'CostCode' is present\"] = responseBody.has('CostCode') ;",
							"tests[\"Field 'EthnicityID' is present\"] = responseBody.has('EthnicityID') ;",
							"tests[\"Field 'Pop' is present\"] = responseBody.has('Pop') ;",
							"tests[\"Field 'ElementType' is present\"] = responseBody.has('ElementType') ;",
							"tests[\"Field 'DatatechCode' is present\"] = responseBody.has('DatatechCode') ;",
							"tests[\"Field 'Ethnicity' is present\"] = responseBody.has('Ethnicity') ;",
							"",
							"",
							"var data = JSON.parse(responseBody);",
							"",
							"var schema = {",
							"    ",
							"    \"type\": \"object\",",
							"    ",
							"    \"properties\": {",
							"        \"ID\": {\"type\":\"number\"},",
							"        \"Name\": {\"type\":\"string\"},",
							"        \"ReachID\": {\"type\":\"number\"},",
							"        \"Population\": {\"type\":\"number\"},",
							"        \"Code\": {\"type\":\"string\"},",
							"        \"BuyCode\": {\"type\":\"string\"},",
							"        \"SortOrder\": {\"type\":\"number\"},",
							"        \"Inactive\": {\"type\":\"boolean\"},",
							"        \"ResourceSetID\": {\"type\":\"number\"},",
							"        \"ImpactFamily\": {\"type\":\"string\"},",
							"        \"CostCode\": {\"type\":\"string\"},",
							"        \"EthnicityID\": {\"type\":\"number\"},",
							"        \"Pop\": {\"type\":\"number\"},",
							"        \"Tag\": {\"type\":\"null\"},",
							"        \"ElementType\": {\"type\":\"number\"},",
							"        \"DatatechCode\": {\"type\":\"string\"},",
							"        \"Ethnicity\": {\"type\":\"string\"}",
							"        ",
							"    }",
							"};",
							"",
							"pm.test('Body is correct', function (){",
							"    pm.expect(tv4.validate(data, schema)).to.be.true;",
							"});",
							"*/",
							"",
							"pm.test(\"Value of field 'Name' is missing due deleting\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.variables.get('Name_updated'));",
							"});",
							"pm.test(\"Value of field 'ResourceSetId' is correct (original value remains unchanged)\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.variables.get('ResourceSetId'));",
							"});",
							"pm.test(\"Value of field 'Buy_Code' is missing due deleting\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.variables.get('Buy_Code_updated'));",
							"});",
							"pm.test(\"Value of field 'Code' is missing due deleting\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.variables.get('Code_updated'));",
							"});",
							"pm.test(\"Value of field 'Cost_Code' is missing due deleting\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.variables.get('Cost_Code_updated'));",
							"});",
							"pm.test(\"Value of field 'Impact_Family' is missing due deleting\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.variables.get('Impact_Family_updated'));",
							"});",
							"pm.test(\"Value of field 'EthnicityID' is missing due deleting\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.variables.get('EthnicityID_updated'));",
							"});",
							"pm.test(\"Value of field 'Inactive' is missing due deleting\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Connection",
						"value": "keep-alive"
					},
					{
						"key": "Accept",
						"value": "*/*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "Origin",
						"value": "{{Origin}}"
					},
					{
						"key": "Sec-Fetch-Site",
						"value": "same-site"
					},
					{
						"key": "Sec-Fetch-Mode",
						"value": "cors"
					},
					{
						"key": "Referer",
						"value": "{{Referer}}"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br"
					},
					{
						"key": "Accept-Language",
						"value": "uk,en-US;q=0.9,en;q=0.8"
					}
				],
				"url": {
					"raw": "https://{{host}}/demo/ResourceSetId/{{ResourceSetId}}",
					"protocol": "https",
					"host": [
						"{{host}}"
					],
					"path": [
						"demo",
						"ResourceSetId",
						"{{ResourceSetId}}"
					]
				},
				"description": "List of Demos (Verifyng that deleted item is missing)"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f536ecf8-e775-40f9-b458-321edefd5899",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c7cf4fb3-75fd-4b50-9fe5-65c54e87fd52",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}